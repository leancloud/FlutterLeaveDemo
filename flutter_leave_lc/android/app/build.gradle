def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutterapplc"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias 'flutter_rtm_demo_key'
            keyPassword '123456'
            storeFile file('/Users/xiaoxu/Documents/Flutter_WorkPlace/Keys/flutter_rtm_demo_key')
            storePassword '123456'
        }
        debug {
            keyAlias 'flutter_rtm_demo_key'
            keyPassword '123456'
            storeFile file('/Users/xiaoxu/Documents/Flutter_WorkPlace/Keys/flutter_rtm_demo_key')
            storePassword '123456'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
//            signingConfig signingConfigs.release
//            minifyEnabled true
//            useProguard true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation 'com.android.support:multidex:1.0.3'
    //混合推送需要的包
    implementation('cn.leancloud:mixpush-vivo:8.2.4')

    //即时通信与推送需要的包
    implementation 'cn.leancloud:realtime-android:8.2.4'
    implementation 'cn.leancloud:storage-android:8.2.4'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.5.0'
}
